import{_ as e,c as r,ag as t,o as i}from"./chunks/framework.BkxfIEIK.js";const _=JSON.parse('{"title":"学习路线","description":"","frontmatter":{},"headers":[],"relativePath":"archived/learning/index.md","filePath":"archived/learning/index.md","lastUpdated":null}'),n={name:"archived/learning/index.md"};function o(l,a,h,d,s,c){return i(),r("div",null,a[0]||(a[0]=[t('<h1 id="学习路线" tabindex="-1">学习路线 <a class="header-anchor" href="#学习路线" aria-label="Permalink to &quot;学习路线&quot;">​</a></h1><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><h3 id="c语言" tabindex="-1">c语言 <a class="header-anchor" href="#c语言" aria-label="Permalink to &quot;c语言&quot;">​</a></h3><p>头疼的命名规范</p><p>典型的名词：野指针</p><p>编译器相关</p><p>大端模式和小端模式</p><h3 id="嵌入式" tabindex="-1">嵌入式 <a class="header-anchor" href="#嵌入式" aria-label="Permalink to &quot;嵌入式&quot;">​</a></h3><p>典例：stm32</p><p>通信协议 iic spi</p><h3 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h3><p>栈 队列</p><h3 id="各种面试题" tabindex="-1">各种面试题？ <a class="header-anchor" href="#各种面试题" aria-label="Permalink to &quot;各种面试题？&quot;">​</a></h3><p><a href="https://gitee.com/langcai1943/embedded_exercise_problems" target="_blank" rel="noreferrer">才鲸嵌入式</a></p><h4 id="程序输出" tabindex="-1">程序输出 <a class="header-anchor" href="#程序输出" aria-label="Permalink to &quot;程序输出&quot;">​</a></h4><p>各种运算符的优先级问题(可能与编译器有关)</p><h3 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to &quot;设计模式&quot;">​</a></h3><p><a href="./design-pattrens.html">设计模式</a>分三类：创建型模式、结构型模式、行为型模式</p>',18)]))}const m=e(n,[["render",o]]);export{_ as __pageData,m as default};
